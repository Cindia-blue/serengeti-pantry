#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Starts a Yarn resourcemanager
#
# chkconfig: 345 85 15
# description: Yarn resourcemanager
#
### BEGIN INIT INFO
# Provides:          yarn-resourcemanager
# Required-Start:    $syslog $remote_fs
# Should-Start:
# Required-Stop:     $syslog $remote_fs
# Should-Stop:
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Hadoop resourcemanager
### END INIT INFO

. /lib/lsb/init-functions
. /etc/rc.d/init.d/functions
. /etc/default/hadoop
. /etc/default/yarn

# Autodetect JAVA_HOME if not defined
if [ -e /usr/libexec/bigtop-detect-javahome ]; then
  . /usr/libexec/bigtop-detect-javahome
elif [ -e /usr/lib/bigtop-utils/bigtop-detect-javahome ]; then
  . /usr/lib/bigtop-utils/bigtop-detect-javahome
fi

RETVAL_SUCCESS=0

STATUS_RUNNING=0
STATUS_DEAD=1
STATUS_DEAD_AND_LOCK=2
STATUS_NOT_RUNNING=3
STATUS_OTHER_ERROR=102


ERROR_PROGRAM_NOT_INSTALLED=5
ERROR_PROGRAM_NOT_CONFIGURED=6


RETVAL=0
EXEC_PATH=/usr/lib/hadoop/sbin/yarn-daemon.sh
YARN_PID_DIR=${YARN_PID_DIR:-/var/run/yarn}
PIDFILE="$YARN_PID_DIR/yarn-$YARN_IDENT_STRING-resourcemanager.pid"
LOCKFILE="/var/lock/subsys/yarn-resourcemanager"
desc="Hadoop resourcemanager daemon"
SLEEP_TIME=5

start() {
  [ -x $exec ] || exit $ERROR_PROGRAM_NOT_INSTALLED
  [ -f $config ] || exit $ERROR_PROGRAM_NOT_CONFIGURED
  log_success_msg "Starting $desc (yarn-resourcemanager): "

  su -s /bin/bash $YARN_IDENT_STRING -c "$EXEC_PATH --config '$YARN_CONF_DIR' start resourcemanager $DAEMON_FLAGS"

  # Some processes are slow to start
  sleep $SLEEP_TIME
  checkstatus
  RETVAL=$?

  [ $RETVAL -eq $RETVAL_SUCCESS ] && touch $LOCKFILE
  return $RETVAL
}

stop() {
  log_success_msg "Stopping $desc (yarn-resourcemanager): "
  start_daemon $EXEC_PATH --config "$YARN_CONF_DIR" stop resourcemanager
  RETVAL=$?

  [ $RETVAL -eq $RETVAL_SUCCESS ] && rm -f $LOCKFILE $PIDFILE

  if [ "resourcemanager" = "resourcemanager" ]; then
    # Some processes are slow to stop
    sleep $SLEEP_TIME
    checkstatus
  
    # Stopping a non running process should be a success
    if [ $RETVAL -eq $STATUS_NOT_RUNNING ]; then
        RETVAL=0
    fi
  fi
}

restart() {
  stop
  start
}


checkstatusofproc(){
  PROC_NAME="su"
  pidofproc -p $PIDFILE $PROC_NAME > /dev/null
}

checkstatus(){
  status -p $PIDFILE resourcemanager
  RETVAL=$?
}

condrestart(){
  [ -e $LOCKFILE ] && restart || :
}

check_for_root() {
  if [ $(id -ur) -ne 0 ]; then
    echo 'Error: root user required'
    echo
    exit 1
  fi
}

yarnservice() {
  case "$1" in
    start)
      check_for_root
      start
      ;;
    stop)
      check_for_root
      stop
      ;;
    status)
      checkstatus
      RETVAL=$?
      ;;
    restart)
      check_for_root
      restart
      ;;
    condrestart|try-restart)
      check_for_root
      condrestart
      ;;
    *)
      echo $"Usage: $0 {start|stop|status|restart|try-restart|condrestart}"
      exit 1
  esac
}

yarnservice "$1"

exit $RETVAL